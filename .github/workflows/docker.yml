name: Docker

on:
  push:
    branches: [ "main", "master" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main", "master" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    strategy:
      matrix:
        platforms: [ linux/amd64, linux/arm64 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3.2.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.description=Docker container with Firefox, SSH server, and RDP support
            org.opencontainers.image.licenses=Unlicense
            org.opencontainers.image.revision=${{ github.sha }}

      # - name: Build and push Docker image
      #   id: build-and-push
      #   uses: docker/build-push-action@v5.3.0
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     platforms: ${{ matrix.platforms }}
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: |
      #       ${{ steps.meta.outputs.tags }}
      #       ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      #     labels: ${{ steps.meta.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      #     outputs: |
      #       type=image,name=target,annotation-index.org.opencontainers.image.description=${{ steps.meta.outputs.labels.org.opencontainers.image.description }}

      - uses: depot/build-push-action@v1
        with:
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          push: true
          load: true
          project: w13rz4v2jg
